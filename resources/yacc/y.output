   0  $accept : programa $end

   1  programa : ID '{' conjunto_sentencias '}'

   2  conjunto_sentencias : sentencia ';'
   3                      | conjunto_sentencias sentencia ';'

   4  sentencia : sentencia_ejecutable
   5            | sentencia_declarativa

   6  sentencia_declarativa : UINT lista_variables
   7                        | declaracion_funcion

   8  lista_variables : ID
   9                  | lista_variables ',' ID

  10  asignacion_multiple : lista_variables '=' lista_constantes

  11  lista_constantes : constante
  12                   | lista_constantes ',' constante

  13  lambda : '(' UINT ID ')' bloque_ejecutable '(' factor ')'

  14  bloque_ejecutable : '{' conjunto_sentencias_ejecutables '}'
  15                    | '{' '}'

  16  conjunto_sentencias_ejecutables : sentencia_ejecutable ';'
  17                                  | conjunto_sentencias_ejecutables sentencia_ejecutable ';'

  18  sentencia_ejecutable : invocacion_funcion
  19                       | asignacion_simple
  20                       | asignacion_multiple
  21                       | sentencia_control
  22                       | impresion
  23                       | lambda

  24  asignacion_simple : variable DASIG expresion

  25  sentencia_control : if
  26                    | while

  27  condicion : expresion comparador expresion

  28  comparador : '>'
  29             | '<'
  30             | EQ
  31             | LEQ
  32             | GEQ
  33             | NEQ

  34  if : IF '(' condicion ')' bloque_ejecutable ENDIF
  35     | IF '(' condicion ')' bloque_ejecutable ELSE bloque_ejecutable ENDIF
  36     | IF '(' condicion ')' bloque_ejecutable error
  37     | IF '(' condicion ')' bloque_ejecutable ELSE bloque_ejecutable error

  38  while : DO sentencia_ejecutable WHILE '(' condicion ')'
  39        | DO bloque_ejecutable WHILE '(' condicion ')'

  40  impresion : PRINT '(' imprimible ')'

  41  imprimible : STR
  42             | expresion

  43  expresion : expresion operador_suma termino
  44            | termino
  45            | expresion operador_suma error

  46  operador_suma : '+'
  47                | '-'

  48  termino : termino operador_multiplicacion factor
  49          | factor
  50          | termino operador_multiplicacion error

  51  operador_multiplicacion : '/'
  52                          | '*'

  53  factor : variable
  54         | constante

  55  constante : CTE
  56            | '-' CTE

  57  variable : ID
  58           | ID '.' ID

  59  declaracion_funcion : UINT ID '(' lista_parametros ')' '{' cuerpo_funcion '}'
  60                      | UINT ID '(' ')' '{' cuerpo_funcion '}'

  61  cuerpo_funcion : conjunto_sentencias RETURN expresion ';'

  62  lista_parametros : parametro_formal
  63                   | lista_parametros ',' parametro_formal

  64  parametro_formal : semantica_pasaje UINT variable

  65  semantica_pasaje :
  66                   | CVR

  67  invocacion_funcion : ID '(' lista_argumentos ')'

  68  lista_argumentos : argumento
  69                   | lista_argumentos ',' argumento

  70  argumento : expresion FLECHA parametro_formal

state 0
	$accept : . programa $end  (0)

	ID  shift 1
	.  error

	programa  goto 2


state 1
	programa : ID . '{' conjunto_sentencias '}'  (1)

	'{'  shift 3
	.  error


state 2
	$accept : programa . $end  (0)

	$end  accept


state 3
	programa : ID '{' . conjunto_sentencias '}'  (1)

	ID  shift 4
	PRINT  shift 5
	IF  shift 6
	UINT  shift 7
	DO  shift 8
	'('  shift 9
	.  error

	conjunto_sentencias  goto 10
	sentencia  goto 11
	sentencia_ejecutable  goto 12
	sentencia_declarativa  goto 13
	lista_variables  goto 14
	declaracion_funcion  goto 15
	asignacion_multiple  goto 16
	lambda  goto 17
	invocacion_funcion  goto 18
	asignacion_simple  goto 19
	sentencia_control  goto 20
	impresion  goto 21
	variable  goto 22
	if  goto 23
	while  goto 24


state 4
	lista_variables : ID .  (8)
	variable : ID .  (57)
	variable : ID . '.' ID  (58)
	invocacion_funcion : ID . '(' lista_argumentos ')'  (67)

	'('  shift 25
	'.'  shift 26
	DASIG  reduce 57
	','  reduce 8
	'='  reduce 8


state 5
	impresion : PRINT . '(' imprimible ')'  (40)

	'('  shift 27
	.  error


state 6
	if : IF . '(' condicion ')' bloque_ejecutable ENDIF  (34)
	if : IF . '(' condicion ')' bloque_ejecutable ELSE bloque_ejecutable ENDIF  (35)
	if : IF . '(' condicion ')' bloque_ejecutable error  (36)
	if : IF . '(' condicion ')' bloque_ejecutable ELSE bloque_ejecutable error  (37)

	'('  shift 28
	.  error


state 7
	sentencia_declarativa : UINT . lista_variables  (6)
	declaracion_funcion : UINT . ID '(' lista_parametros ')' '{' cuerpo_funcion '}'  (59)
	declaracion_funcion : UINT . ID '(' ')' '{' cuerpo_funcion '}'  (60)

	ID  shift 29
	.  error

	lista_variables  goto 30


state 8
	while : DO . sentencia_ejecutable WHILE '(' condicion ')'  (38)
	while : DO . bloque_ejecutable WHILE '(' condicion ')'  (39)

	ID  shift 4
	PRINT  shift 5
	IF  shift 6
	DO  shift 8
	'{'  shift 31
	'('  shift 9
	.  error

	sentencia_ejecutable  goto 32
	lista_variables  goto 14
	asignacion_multiple  goto 16
	lambda  goto 17
	bloque_ejecutable  goto 33
	invocacion_funcion  goto 18
	asignacion_simple  goto 19
	sentencia_control  goto 20
	impresion  goto 21
	variable  goto 22
	if  goto 23
	while  goto 24


state 9
	lambda : '(' . UINT ID ')' bloque_ejecutable '(' factor ')'  (13)

	UINT  shift 34
	.  error


state 10
	programa : ID '{' conjunto_sentencias . '}'  (1)
	conjunto_sentencias : conjunto_sentencias . sentencia ';'  (3)

	ID  shift 4
	PRINT  shift 5
	IF  shift 6
	UINT  shift 7
	DO  shift 8
	'}'  shift 35
	'('  shift 9
	.  error

	sentencia  goto 36
	sentencia_ejecutable  goto 12
	sentencia_declarativa  goto 13
	lista_variables  goto 14
	declaracion_funcion  goto 15
	asignacion_multiple  goto 16
	lambda  goto 17
	invocacion_funcion  goto 18
	asignacion_simple  goto 19
	sentencia_control  goto 20
	impresion  goto 21
	variable  goto 22
	if  goto 23
	while  goto 24


state 11
	conjunto_sentencias : sentencia . ';'  (2)

	';'  shift 37
	.  error


state 12
	sentencia : sentencia_ejecutable .  (4)

	.  reduce 4


state 13
	sentencia : sentencia_declarativa .  (5)

	.  reduce 5


state 14
	lista_variables : lista_variables . ',' ID  (9)
	asignacion_multiple : lista_variables . '=' lista_constantes  (10)

	','  shift 38
	'='  shift 39
	.  error


state 15
	sentencia_declarativa : declaracion_funcion .  (7)

	.  reduce 7


state 16
	sentencia_ejecutable : asignacion_multiple .  (20)

	.  reduce 20


state 17
	sentencia_ejecutable : lambda .  (23)

	.  reduce 23


state 18
	sentencia_ejecutable : invocacion_funcion .  (18)

	.  reduce 18


state 19
	sentencia_ejecutable : asignacion_simple .  (19)

	.  reduce 19


state 20
	sentencia_ejecutable : sentencia_control .  (21)

	.  reduce 21


state 21
	sentencia_ejecutable : impresion .  (22)

	.  reduce 22


state 22
	asignacion_simple : variable . DASIG expresion  (24)

	DASIG  shift 40
	.  error


state 23
	sentencia_control : if .  (25)

	.  reduce 25


state 24
	sentencia_control : while .  (26)

	.  reduce 26


state 25
	invocacion_funcion : ID '(' . lista_argumentos ')'  (67)

	ID  shift 41
	CTE  shift 42
	'-'  shift 43
	.  error

	constante  goto 44
	factor  goto 45
	variable  goto 46
	expresion  goto 47
	termino  goto 48
	lista_argumentos  goto 49
	argumento  goto 50


state 26
	variable : ID '.' . ID  (58)

	ID  shift 51
	.  error


state 27
	impresion : PRINT '(' . imprimible ')'  (40)

	ID  shift 41
	CTE  shift 42
	STR  shift 52
	'-'  shift 43
	.  error

	constante  goto 44
	factor  goto 45
	variable  goto 46
	expresion  goto 53
	imprimible  goto 54
	termino  goto 48


state 28
	if : IF '(' . condicion ')' bloque_ejecutable ENDIF  (34)
	if : IF '(' . condicion ')' bloque_ejecutable ELSE bloque_ejecutable ENDIF  (35)
	if : IF '(' . condicion ')' bloque_ejecutable error  (36)
	if : IF '(' . condicion ')' bloque_ejecutable ELSE bloque_ejecutable error  (37)

	ID  shift 41
	CTE  shift 42
	'-'  shift 43
	.  error

	constante  goto 44
	factor  goto 45
	variable  goto 46
	expresion  goto 55
	condicion  goto 56
	termino  goto 48


state 29
	lista_variables : ID .  (8)
	declaracion_funcion : UINT ID . '(' lista_parametros ')' '{' cuerpo_funcion '}'  (59)
	declaracion_funcion : UINT ID . '(' ')' '{' cuerpo_funcion '}'  (60)

	'('  shift 57
	';'  reduce 8
	','  reduce 8


state 30
	sentencia_declarativa : UINT lista_variables .  (6)
	lista_variables : lista_variables . ',' ID  (9)

	','  shift 38
	';'  reduce 6


state 31
	bloque_ejecutable : '{' . conjunto_sentencias_ejecutables '}'  (14)
	bloque_ejecutable : '{' . '}'  (15)

	ID  shift 4
	PRINT  shift 5
	IF  shift 6
	DO  shift 8
	'}'  shift 58
	'('  shift 9
	.  error

	sentencia_ejecutable  goto 59
	lista_variables  goto 14
	asignacion_multiple  goto 16
	lambda  goto 17
	conjunto_sentencias_ejecutables  goto 60
	invocacion_funcion  goto 18
	asignacion_simple  goto 19
	sentencia_control  goto 20
	impresion  goto 21
	variable  goto 22
	if  goto 23
	while  goto 24


state 32
	while : DO sentencia_ejecutable . WHILE '(' condicion ')'  (38)

	WHILE  shift 61
	.  error


state 33
	while : DO bloque_ejecutable . WHILE '(' condicion ')'  (39)

	WHILE  shift 62
	.  error


state 34
	lambda : '(' UINT . ID ')' bloque_ejecutable '(' factor ')'  (13)

	ID  shift 63
	.  error


state 35
	programa : ID '{' conjunto_sentencias '}' .  (1)

	.  reduce 1


state 36
	conjunto_sentencias : conjunto_sentencias sentencia . ';'  (3)

	';'  shift 64
	.  error


state 37
	conjunto_sentencias : sentencia ';' .  (2)

	.  reduce 2


state 38
	lista_variables : lista_variables ',' . ID  (9)

	ID  shift 65
	.  error


state 39
	asignacion_multiple : lista_variables '=' . lista_constantes  (10)

	CTE  shift 42
	'-'  shift 43
	.  error

	lista_constantes  goto 66
	constante  goto 67


state 40
	asignacion_simple : variable DASIG . expresion  (24)

	ID  shift 41
	CTE  shift 42
	'-'  shift 43
	.  error

	constante  goto 44
	factor  goto 45
	variable  goto 46
	expresion  goto 68
	termino  goto 48


state 41
	variable : ID .  (57)
	variable : ID . '.' ID  (58)

	'.'  shift 26
	EQ  reduce 57
	GEQ  reduce 57
	LEQ  reduce 57
	NEQ  reduce 57
	FLECHA  reduce 57
	WHILE  reduce 57
	';'  reduce 57
	','  reduce 57
	')'  reduce 57
	'>'  reduce 57
	'<'  reduce 57
	'+'  reduce 57
	'-'  reduce 57
	'/'  reduce 57
	'*'  reduce 57


state 42
	constante : CTE .  (55)

	.  reduce 55


state 43
	constante : '-' . CTE  (56)

	CTE  shift 69
	.  error


state 44
	factor : constante .  (54)

	.  reduce 54


state 45
	termino : factor .  (49)

	.  reduce 49


state 46
	factor : variable .  (53)

	.  reduce 53


state 47
	expresion : expresion . operador_suma termino  (43)
	expresion : expresion . operador_suma error  (45)
	argumento : expresion . FLECHA parametro_formal  (70)

	FLECHA  shift 70
	'+'  shift 71
	'-'  shift 72
	.  error

	operador_suma  goto 73


state 48
	expresion : termino .  (44)
	termino : termino . operador_multiplicacion factor  (48)
	termino : termino . operador_multiplicacion error  (50)

	'/'  shift 74
	'*'  shift 75
	EQ  reduce 44
	GEQ  reduce 44
	LEQ  reduce 44
	NEQ  reduce 44
	FLECHA  reduce 44
	WHILE  reduce 44
	';'  reduce 44
	')'  reduce 44
	'>'  reduce 44
	'<'  reduce 44
	'+'  reduce 44
	'-'  reduce 44

	operador_multiplicacion  goto 76


state 49
	invocacion_funcion : ID '(' lista_argumentos . ')'  (67)
	lista_argumentos : lista_argumentos . ',' argumento  (69)

	','  shift 77
	')'  shift 78
	.  error


state 50
	lista_argumentos : argumento .  (68)

	.  reduce 68


state 51
	variable : ID '.' ID .  (58)

	.  reduce 58


state 52
	imprimible : STR .  (41)

	.  reduce 41


state 53
	imprimible : expresion .  (42)
	expresion : expresion . operador_suma termino  (43)
	expresion : expresion . operador_suma error  (45)

	'+'  shift 71
	'-'  shift 72
	')'  reduce 42

	operador_suma  goto 73


state 54
	impresion : PRINT '(' imprimible . ')'  (40)

	')'  shift 79
	.  error


state 55
	condicion : expresion . comparador expresion  (27)
	expresion : expresion . operador_suma termino  (43)
	expresion : expresion . operador_suma error  (45)

	EQ  shift 80
	GEQ  shift 81
	LEQ  shift 82
	NEQ  shift 83
	'>'  shift 84
	'<'  shift 85
	'+'  shift 71
	'-'  shift 72
	.  error

	comparador  goto 86
	operador_suma  goto 73


state 56
	if : IF '(' condicion . ')' bloque_ejecutable ENDIF  (34)
	if : IF '(' condicion . ')' bloque_ejecutable ELSE bloque_ejecutable ENDIF  (35)
	if : IF '(' condicion . ')' bloque_ejecutable error  (36)
	if : IF '(' condicion . ')' bloque_ejecutable ELSE bloque_ejecutable error  (37)

	')'  shift 87
	.  error


state 57
	declaracion_funcion : UINT ID '(' . lista_parametros ')' '{' cuerpo_funcion '}'  (59)
	declaracion_funcion : UINT ID '(' . ')' '{' cuerpo_funcion '}'  (60)
	semantica_pasaje : .  (65)

	CVR  shift 88
	')'  shift 89
	UINT  reduce 65

	lista_parametros  goto 90
	parametro_formal  goto 91
	semantica_pasaje  goto 92


state 58
	bloque_ejecutable : '{' '}' .  (15)

	.  reduce 15


state 59
	conjunto_sentencias_ejecutables : sentencia_ejecutable . ';'  (16)

	';'  shift 93
	.  error


state 60
	bloque_ejecutable : '{' conjunto_sentencias_ejecutables . '}'  (14)
	conjunto_sentencias_ejecutables : conjunto_sentencias_ejecutables . sentencia_ejecutable ';'  (17)

	ID  shift 4
	PRINT  shift 5
	IF  shift 6
	DO  shift 8
	'}'  shift 94
	'('  shift 9
	.  error

	sentencia_ejecutable  goto 95
	lista_variables  goto 14
	asignacion_multiple  goto 16
	lambda  goto 17
	invocacion_funcion  goto 18
	asignacion_simple  goto 19
	sentencia_control  goto 20
	impresion  goto 21
	variable  goto 22
	if  goto 23
	while  goto 24


state 61
	while : DO sentencia_ejecutable WHILE . '(' condicion ')'  (38)

	'('  shift 96
	.  error


state 62
	while : DO bloque_ejecutable WHILE . '(' condicion ')'  (39)

	'('  shift 97
	.  error


state 63
	lambda : '(' UINT ID . ')' bloque_ejecutable '(' factor ')'  (13)

	')'  shift 98
	.  error


state 64
	conjunto_sentencias : conjunto_sentencias sentencia ';' .  (3)

	.  reduce 3


state 65
	lista_variables : lista_variables ',' ID .  (9)

	.  reduce 9


state 66
	asignacion_multiple : lista_variables '=' lista_constantes .  (10)
	lista_constantes : lista_constantes . ',' constante  (12)

	','  shift 99
	WHILE  reduce 10
	';'  reduce 10


state 67
	lista_constantes : constante .  (11)

	.  reduce 11


state 68
	asignacion_simple : variable DASIG expresion .  (24)
	expresion : expresion . operador_suma termino  (43)
	expresion : expresion . operador_suma error  (45)

	'+'  shift 71
	'-'  shift 72
	WHILE  reduce 24
	';'  reduce 24

	operador_suma  goto 73


state 69
	constante : '-' CTE .  (56)

	.  reduce 56


state 70
	argumento : expresion FLECHA . parametro_formal  (70)
	semantica_pasaje : .  (65)

	CVR  shift 88
	UINT  reduce 65

	parametro_formal  goto 100
	semantica_pasaje  goto 92


state 71
	operador_suma : '+' .  (46)

	.  reduce 46


state 72
	operador_suma : '-' .  (47)

	.  reduce 47


state 73
	expresion : expresion operador_suma . termino  (43)
	expresion : expresion operador_suma . error  (45)

	error  shift 101
	ID  shift 41
	CTE  shift 42
	'-'  shift 43
	.  error

	constante  goto 44
	factor  goto 45
	variable  goto 46
	termino  goto 102


state 74
	operador_multiplicacion : '/' .  (51)

	.  reduce 51


state 75
	operador_multiplicacion : '*' .  (52)

	.  reduce 52


state 76
	termino : termino operador_multiplicacion . factor  (48)
	termino : termino operador_multiplicacion . error  (50)

	error  shift 103
	ID  shift 41
	CTE  shift 42
	'-'  shift 43
	.  error

	constante  goto 44
	factor  goto 104
	variable  goto 46


state 77
	lista_argumentos : lista_argumentos ',' . argumento  (69)

	ID  shift 41
	CTE  shift 42
	'-'  shift 43
	.  error

	constante  goto 44
	factor  goto 45
	variable  goto 46
	expresion  goto 47
	termino  goto 48
	argumento  goto 105


state 78
	invocacion_funcion : ID '(' lista_argumentos ')' .  (67)

	.  reduce 67


state 79
	impresion : PRINT '(' imprimible ')' .  (40)

	.  reduce 40


state 80
	comparador : EQ .  (30)

	.  reduce 30


state 81
	comparador : GEQ .  (32)

	.  reduce 32


state 82
	comparador : LEQ .  (31)

	.  reduce 31


state 83
	comparador : NEQ .  (33)

	.  reduce 33


state 84
	comparador : '>' .  (28)

	.  reduce 28


state 85
	comparador : '<' .  (29)

	.  reduce 29


state 86
	condicion : expresion comparador . expresion  (27)

	ID  shift 41
	CTE  shift 42
	'-'  shift 43
	.  error

	constante  goto 44
	factor  goto 45
	variable  goto 46
	expresion  goto 106
	termino  goto 48


state 87
	if : IF '(' condicion ')' . bloque_ejecutable ENDIF  (34)
	if : IF '(' condicion ')' . bloque_ejecutable ELSE bloque_ejecutable ENDIF  (35)
	if : IF '(' condicion ')' . bloque_ejecutable error  (36)
	if : IF '(' condicion ')' . bloque_ejecutable ELSE bloque_ejecutable error  (37)

	'{'  shift 31
	.  error

	bloque_ejecutable  goto 107


state 88
	semantica_pasaje : CVR .  (66)

	.  reduce 66


state 89
	declaracion_funcion : UINT ID '(' ')' . '{' cuerpo_funcion '}'  (60)

	'{'  shift 108
	.  error


state 90
	declaracion_funcion : UINT ID '(' lista_parametros . ')' '{' cuerpo_funcion '}'  (59)
	lista_parametros : lista_parametros . ',' parametro_formal  (63)

	','  shift 109
	')'  shift 110
	.  error


state 91
	lista_parametros : parametro_formal .  (62)

	.  reduce 62


state 92
	parametro_formal : semantica_pasaje . UINT variable  (64)

	UINT  shift 111
	.  error


state 93
	conjunto_sentencias_ejecutables : sentencia_ejecutable ';' .  (16)

	.  reduce 16


state 94
	bloque_ejecutable : '{' conjunto_sentencias_ejecutables '}' .  (14)

	.  reduce 14


state 95
	conjunto_sentencias_ejecutables : conjunto_sentencias_ejecutables sentencia_ejecutable . ';'  (17)

	';'  shift 112
	.  error


state 96
	while : DO sentencia_ejecutable WHILE '(' . condicion ')'  (38)

	ID  shift 41
	CTE  shift 42
	'-'  shift 43
	.  error

	constante  goto 44
	factor  goto 45
	variable  goto 46
	expresion  goto 55
	condicion  goto 113
	termino  goto 48


state 97
	while : DO bloque_ejecutable WHILE '(' . condicion ')'  (39)

	ID  shift 41
	CTE  shift 42
	'-'  shift 43
	.  error

	constante  goto 44
	factor  goto 45
	variable  goto 46
	expresion  goto 55
	condicion  goto 114
	termino  goto 48


state 98
	lambda : '(' UINT ID ')' . bloque_ejecutable '(' factor ')'  (13)

	'{'  shift 31
	.  error

	bloque_ejecutable  goto 115


state 99
	lista_constantes : lista_constantes ',' . constante  (12)

	CTE  shift 42
	'-'  shift 43
	.  error

	constante  goto 116


state 100
	argumento : expresion FLECHA parametro_formal .  (70)

	.  reduce 70


state 101
	expresion : expresion operador_suma error .  (45)

	.  reduce 45


state 102
	expresion : expresion operador_suma termino .  (43)
	termino : termino . operador_multiplicacion factor  (48)
	termino : termino . operador_multiplicacion error  (50)

	'/'  shift 74
	'*'  shift 75
	EQ  reduce 43
	GEQ  reduce 43
	LEQ  reduce 43
	NEQ  reduce 43
	FLECHA  reduce 43
	WHILE  reduce 43
	';'  reduce 43
	')'  reduce 43
	'>'  reduce 43
	'<'  reduce 43
	'+'  reduce 43
	'-'  reduce 43

	operador_multiplicacion  goto 76


state 103
	termino : termino operador_multiplicacion error .  (50)

	.  reduce 50


state 104
	termino : termino operador_multiplicacion factor .  (48)

	.  reduce 48


state 105
	lista_argumentos : lista_argumentos ',' argumento .  (69)

	.  reduce 69


state 106
	condicion : expresion comparador expresion .  (27)
	expresion : expresion . operador_suma termino  (43)
	expresion : expresion . operador_suma error  (45)

	'+'  shift 71
	'-'  shift 72
	')'  reduce 27

	operador_suma  goto 73


state 107
	if : IF '(' condicion ')' bloque_ejecutable . ENDIF  (34)
	if : IF '(' condicion ')' bloque_ejecutable . ELSE bloque_ejecutable ENDIF  (35)
	if : IF '(' condicion ')' bloque_ejecutable . error  (36)
	if : IF '(' condicion ')' bloque_ejecutable . ELSE bloque_ejecutable error  (37)

	error  shift 117
	ELSE  shift 118
	ENDIF  shift 119
	.  error


state 108
	declaracion_funcion : UINT ID '(' ')' '{' . cuerpo_funcion '}'  (60)

	ID  shift 4
	PRINT  shift 5
	IF  shift 6
	UINT  shift 7
	DO  shift 8
	'('  shift 9
	.  error

	conjunto_sentencias  goto 120
	sentencia  goto 11
	sentencia_ejecutable  goto 12
	sentencia_declarativa  goto 13
	lista_variables  goto 14
	declaracion_funcion  goto 15
	asignacion_multiple  goto 16
	lambda  goto 17
	invocacion_funcion  goto 18
	asignacion_simple  goto 19
	sentencia_control  goto 20
	impresion  goto 21
	variable  goto 22
	if  goto 23
	while  goto 24
	cuerpo_funcion  goto 121


state 109
	lista_parametros : lista_parametros ',' . parametro_formal  (63)
	semantica_pasaje : .  (65)

	CVR  shift 88
	UINT  reduce 65

	parametro_formal  goto 122
	semantica_pasaje  goto 92


state 110
	declaracion_funcion : UINT ID '(' lista_parametros ')' . '{' cuerpo_funcion '}'  (59)

	'{'  shift 123
	.  error


state 111
	parametro_formal : semantica_pasaje UINT . variable  (64)

	ID  shift 41
	.  error

	variable  goto 124


state 112
	conjunto_sentencias_ejecutables : conjunto_sentencias_ejecutables sentencia_ejecutable ';' .  (17)

	.  reduce 17


state 113
	while : DO sentencia_ejecutable WHILE '(' condicion . ')'  (38)

	')'  shift 125
	.  error


state 114
	while : DO bloque_ejecutable WHILE '(' condicion . ')'  (39)

	')'  shift 126
	.  error


state 115
	lambda : '(' UINT ID ')' bloque_ejecutable . '(' factor ')'  (13)

	'('  shift 127
	.  error


state 116
	lista_constantes : lista_constantes ',' constante .  (12)

	.  reduce 12


state 117
	if : IF '(' condicion ')' bloque_ejecutable error .  (36)

	.  reduce 36


state 118
	if : IF '(' condicion ')' bloque_ejecutable ELSE . bloque_ejecutable ENDIF  (35)
	if : IF '(' condicion ')' bloque_ejecutable ELSE . bloque_ejecutable error  (37)

	'{'  shift 31
	.  error

	bloque_ejecutable  goto 128


state 119
	if : IF '(' condicion ')' bloque_ejecutable ENDIF .  (34)

	.  reduce 34


state 120
	conjunto_sentencias : conjunto_sentencias . sentencia ';'  (3)
	cuerpo_funcion : conjunto_sentencias . RETURN expresion ';'  (61)

	ID  shift 4
	PRINT  shift 5
	IF  shift 6
	UINT  shift 7
	DO  shift 8
	RETURN  shift 129
	'('  shift 9
	.  error

	sentencia  goto 36
	sentencia_ejecutable  goto 12
	sentencia_declarativa  goto 13
	lista_variables  goto 14
	declaracion_funcion  goto 15
	asignacion_multiple  goto 16
	lambda  goto 17
	invocacion_funcion  goto 18
	asignacion_simple  goto 19
	sentencia_control  goto 20
	impresion  goto 21
	variable  goto 22
	if  goto 23
	while  goto 24


state 121
	declaracion_funcion : UINT ID '(' ')' '{' cuerpo_funcion . '}'  (60)

	'}'  shift 130
	.  error


state 122
	lista_parametros : lista_parametros ',' parametro_formal .  (63)

	.  reduce 63


state 123
	declaracion_funcion : UINT ID '(' lista_parametros ')' '{' . cuerpo_funcion '}'  (59)

	ID  shift 4
	PRINT  shift 5
	IF  shift 6
	UINT  shift 7
	DO  shift 8
	'('  shift 9
	.  error

	conjunto_sentencias  goto 120
	sentencia  goto 11
	sentencia_ejecutable  goto 12
	sentencia_declarativa  goto 13
	lista_variables  goto 14
	declaracion_funcion  goto 15
	asignacion_multiple  goto 16
	lambda  goto 17
	invocacion_funcion  goto 18
	asignacion_simple  goto 19
	sentencia_control  goto 20
	impresion  goto 21
	variable  goto 22
	if  goto 23
	while  goto 24
	cuerpo_funcion  goto 131


state 124
	parametro_formal : semantica_pasaje UINT variable .  (64)

	.  reduce 64


state 125
	while : DO sentencia_ejecutable WHILE '(' condicion ')' .  (38)

	.  reduce 38


state 126
	while : DO bloque_ejecutable WHILE '(' condicion ')' .  (39)

	.  reduce 39


state 127
	lambda : '(' UINT ID ')' bloque_ejecutable '(' . factor ')'  (13)

	ID  shift 41
	CTE  shift 42
	'-'  shift 43
	.  error

	constante  goto 44
	factor  goto 132
	variable  goto 46


state 128
	if : IF '(' condicion ')' bloque_ejecutable ELSE bloque_ejecutable . ENDIF  (35)
	if : IF '(' condicion ')' bloque_ejecutable ELSE bloque_ejecutable . error  (37)

	error  shift 133
	ENDIF  shift 134
	.  error


state 129
	cuerpo_funcion : conjunto_sentencias RETURN . expresion ';'  (61)

	ID  shift 41
	CTE  shift 42
	'-'  shift 43
	.  error

	constante  goto 44
	factor  goto 45
	variable  goto 46
	expresion  goto 135
	termino  goto 48


state 130
	declaracion_funcion : UINT ID '(' ')' '{' cuerpo_funcion '}' .  (60)

	.  reduce 60


state 131
	declaracion_funcion : UINT ID '(' lista_parametros ')' '{' cuerpo_funcion . '}'  (59)

	'}'  shift 136
	.  error


state 132
	lambda : '(' UINT ID ')' bloque_ejecutable '(' factor . ')'  (13)

	')'  shift 137
	.  error


state 133
	if : IF '(' condicion ')' bloque_ejecutable ELSE bloque_ejecutable error .  (37)

	.  reduce 37


state 134
	if : IF '(' condicion ')' bloque_ejecutable ELSE bloque_ejecutable ENDIF .  (35)

	.  reduce 35


state 135
	expresion : expresion . operador_suma termino  (43)
	expresion : expresion . operador_suma error  (45)
	cuerpo_funcion : conjunto_sentencias RETURN expresion . ';'  (61)

	';'  shift 138
	'+'  shift 71
	'-'  shift 72
	.  error

	operador_suma  goto 73


state 136
	declaracion_funcion : UINT ID '(' lista_parametros ')' '{' cuerpo_funcion '}' .  (59)

	.  reduce 59


state 137
	lambda : '(' UINT ID ')' bloque_ejecutable '(' factor ')' .  (13)

	.  reduce 13


state 138
	cuerpo_funcion : conjunto_sentencias RETURN expresion ';' .  (61)

	.  reduce 61


34 terminals, 35 nonterminals
71 grammar rules, 139 states
