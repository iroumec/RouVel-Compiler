@startuml classDiagram

class SymbolTable {

    - tabla : HashMap<Integer, Symbol>
    + agregarEntrada(Symbol) : int
    + existeEntrada(Symbol) : int
    + obtenerEntrada(indice : int) : Symbol 
}

class Symbol {

    - tipoToken : Token
    - lexema : String

    + Symbol(token : Token, lexema : Lexema)
}

enum TokenType {
    ID
    CTE
    STR
}

class LexicalAnalyzer {

    - {readOnly} transicionEstados : int[][]
    - {readOnly} accionesSemanticas : SemanticAction[][]
    - {readOnly} reservedWords : String[]
    - codigoFuente : String
    - siguienteCaracterALeer : int

    + LexicalAnalyzer(sourceCodePath : String)
    + normalizeInput(caracter : char) : int
    + getNextToken() : Token
}

class Token {

    - type : TokenType
    - token : Token

    + getToken() : TokenType
    + getNumericToken() : int
    + getAttributes() : List<String>
}

class TokenSimple {


}

class TokenCompuesto {

}

class SemanticAction {

    + execute()
}

@enduml